import java.util.*;


public class solveMaze {
	
	static Random rand = new Random();
	public static void main(String[] args) {
		
		int row, col;
		
		row = rand.nextInt(10)+10;
		col = rand.nextInt(20)+10;
		int srow = rand.nextInt(row);
		int scol = 0;
		char[][] maze = new char[row][col];
		int erow= rand.nextInt(row);
		int ecol= maze[erow].length-1;
		Position start = new Position(srow,scol);
		Position exit= new Position(erow, ecol);
		for (int i = 0; i < maze.length; i++) {
	            for (int j = 0; j < maze[i].length; j++) {
	                maze[i][j] = '#';
	            }
	        }		
		maze[srow][scol]='*';
		System.out.println(row+"  "+col);
		mazeGenerator(maze, row, col, erow, ecol);
		
		navigateMaze(maze, start, exit);
		
		maze[srow][scol]='*';
		for (int i=0;i<maze.length;i++) {
			for (int j=0; j<maze[i].length;j++) {
				System.out.print(maze[i][j]);
				}
			System.out.print("\n");
			}
	}
	
	public static void mazeGenerator(char[][] m,int r,int c, int er, int ec) {
		
		int row, col;
		for( int i=1; i<=r*c*1.25; i++) {
			row =rand.nextInt(r);
			col =rand.nextInt(c);
			
			if(m[row][col]=='#') {
				m[row][col]= '.';
			}

		}

		m[er][ec]='*';
	}
	
	public static void navigateMaze(char[][] m,Position start, Position exit) {
		
	}
	
	private class Position{
		private int row=0, col=0;
		
		public Position(int row, int col) {
			this.row=row;
			this.col=col;
			
		}

		public int getRow() {
			return row;
		}



		public int getCol() {
			return col;
		}
		
		public void setRow(int row) {
			this.row = row;
		}
		public void setCol(int col) {
			this.col = col;
		}
	}
	
	
}
